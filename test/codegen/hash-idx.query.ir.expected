// Locals:
// hoisted0 : int (persists=false)
// hoisted1 : int (persists=false)
// hoisted2 : int (persists=false)
// hoisted3 : int (persists=false)
// hoisted4 : int (persists=false)
// hoisted5 : int (persists=false)
// hoisted6 : int (persists=false)
// i5 : int (persists=true)
// hash3 : int (persists=false)
// vstart1 : int (persists=false)
// key2 : tuple[int] (persists=false)
// cstart4 : int (persists=true)
// count6 : int (persists=true)
// kstart0 : int (persists=false)
fun printer () : void {
    hoisted0 = 2 * 1;
    hoisted1 = buf[1 : 1];
    hoisted2 = hoisted1 - 1;
    hoisted3 = buf[1 : 1];
    hoisted4 = 2 + hoisted3;
    hoisted5 = buf[1 : 1];
    hoisted6 = 2 + hoisted5;
    hash3 = hoisted0;
    if (hash3 < 0 || hoisted2 < hash3) {
        
    } else {
         kstart0 = buf[2 + hash3 : 1] + hoisted4;
         key2 = (buf[kstart0 : 1]);
         vstart1 = buf[2 + hash3 : 1] + hoisted6 + 1;
         if (true && key2[0] == 2) {
             cstart4 = vstart1 + 1 + 1;
             i5 = 0;
             count6 = buf[vstart1 : 1];
             loop (i5 < count6) {
                 print(tuple[int, int], (key2[0], buf[cstart4 : 1]));
                 cstart4 = cstart4 + 1;
                 i5 = i5 + 1;
             }
         } else {
              
         }
    }
}
// Locals:
// hoisted7 : int (persists=false)
// hoisted8 : int (persists=false)
// hoisted9 : int (persists=false)
// hoisted10 : int (persists=false)
// hoisted11 : int (persists=false)
// hoisted12 : int (persists=false)
// hoisted13 : int (persists=false)
// i5 : int (persists=true)
// hash3 : int (persists=false)
// vstart1 : int (persists=false)
// key2 : tuple[int] (persists=false)
// cstart4 : int (persists=true)
// count6 : int (persists=true)
// kstart0 : int (persists=false)
fun consumer () : void {
    hoisted7 = 2 * 1;
    hoisted8 = buf[1 : 1];
    hoisted9 = hoisted8 - 1;
    hoisted10 = buf[1 : 1];
    hoisted11 = 2 + hoisted10;
    hoisted12 = buf[1 : 1];
    hoisted13 = 2 + hoisted12;
    hash3 = hoisted7;
    if (hash3 < 0 || hoisted9 < hash3) {
        
    } else {
         kstart0 = buf[2 + hash3 : 1] + hoisted11;
         key2 = (buf[kstart0 : 1]);
         vstart1 = buf[2 + hash3 : 1] + hoisted13 + 1;
         if (true && key2[0] == 2) {
             cstart4 = vstart1 + 1 + 1;
             i5 = 0;
             count6 = buf[vstart1 : 1];
             loop (i5 < count6) {
                 consume(tuple[int, int], (key2[0], buf[cstart4 : 1]));
                 cstart4 = cstart4 + 1;
                 i5 = i5 + 1;
             }
         } else {
              
         }
    }
}
