// Locals:
// hoisted0 : int (persists=false)
// hoisted1 : date (persists=false)
// hoisted2 : int (persists=false)
// hoisted3 : int (persists=false)
// hoisted4 : date (persists=false)
// hoisted5 : int (persists=false)
// hoisted6 : int (persists=false)
// hoisted7 : date (persists=false)
// hoisted8 : int (persists=false)
// hoisted9 : date (persists=false)
// hoisted10 : int (persists=false)
// mid5 : int (persists=true)
// key10 : tuple[date] (persists=false)
// key9 : tuple[date] (persists=true)
// high4 : int (persists=true)
// kstart0 : int (persists=true)
// key6 : tuple[date] (persists=false)
// idx7 : int (persists=true)
// vstart1 : int (persists=true)
// key2 : tuple[date] (persists=true)
// key8 : tuple[date] (persists=false)
// low3 : int (persists=true)
fun printer () : void {
    hoisted0 = 15 / 3;
    hoisted1 = 2017-10-05;
    hoisted2 = date2int(hoisted1);
    hoisted3 = 15 / 3;
    hoisted4 = 2018-09-01;
    hoisted5 = date2int(hoisted4);
    hoisted6 = 15 / 3;
    hoisted7 = 2018-09-01;
    hoisted8 = date2int(hoisted7);
    hoisted9 = 2017-10-05;
    hoisted10 = date2int(hoisted9);
    low3 = 0;
    high4 = hoisted0;
    loop (low3 < high4) {
        mid5 = low3 + high4 / 2;
        kstart0 = 0 + mid5 * 3;
        key6 = (int2date(buf[kstart0 : 2]));
        if (not(date2int(key6[0]) < hoisted2)) {
            high4 = mid5;
        } else {
             low3 = mid5 + 1;
        }
    }
    idx7 = low3;
    if (idx7 < hoisted3) {
        kstart0 = 0 + idx7 * 3;
        key8 = (int2date(buf[kstart0 : 2]));
        key9 = key8;
        loop (date2int(key9[0]) < hoisted5 && idx7 < hoisted6) {
            if (date2int(key9[0]) < hoisted8 &&
                not(date2int(key9[0]) < hoisted10)) {
                vstart1 = buf[0 + idx7 * 3 + 2 : 1] + 15 + 0;
                key2 = key9;
                print(tuple[date, date],
                (key2[0], int2date(buf[vstart1 : 2])));
            } else {
                 
            }
            idx7 = idx7 + 1;
            kstart0 = 0 + idx7 * 3;
            key10 = (int2date(buf[kstart0 : 2]));
            key9 = key10;
        }
    } else {
         
    }
}
// Locals:
// hoisted11 : int (persists=false)
// hoisted12 : date (persists=false)
// hoisted13 : int (persists=false)
// hoisted14 : int (persists=false)
// hoisted15 : date (persists=false)
// hoisted16 : int (persists=false)
// hoisted17 : int (persists=false)
// hoisted18 : date (persists=false)
// hoisted19 : int (persists=false)
// hoisted20 : date (persists=false)
// hoisted21 : int (persists=false)
// mid5 : int (persists=true)
// key10 : tuple[date] (persists=false)
// key9 : tuple[date] (persists=true)
// high4 : int (persists=true)
// kstart0 : int (persists=true)
// key6 : tuple[date] (persists=false)
// idx7 : int (persists=true)
// vstart1 : int (persists=true)
// key2 : tuple[date] (persists=true)
// key8 : tuple[date] (persists=false)
// low3 : int (persists=true)
fun consumer () : void {
    hoisted11 = 15 / 3;
    hoisted12 = 2017-10-05;
    hoisted13 = date2int(hoisted12);
    hoisted14 = 15 / 3;
    hoisted15 = 2018-09-01;
    hoisted16 = date2int(hoisted15);
    hoisted17 = 15 / 3;
    hoisted18 = 2018-09-01;
    hoisted19 = date2int(hoisted18);
    hoisted20 = 2017-10-05;
    hoisted21 = date2int(hoisted20);
    low3 = 0;
    high4 = hoisted11;
    loop (low3 < high4) {
        mid5 = low3 + high4 / 2;
        kstart0 = 0 + mid5 * 3;
        key6 = (int2date(buf[kstart0 : 2]));
        if (not(date2int(key6[0]) < hoisted13)) {
            high4 = mid5;
        } else {
             low3 = mid5 + 1;
        }
    }
    idx7 = low3;
    if (idx7 < hoisted14) {
        kstart0 = 0 + idx7 * 3;
        key8 = (int2date(buf[kstart0 : 2]));
        key9 = key8;
        loop (date2int(key9[0]) < hoisted16 && idx7 < hoisted17) {
            if (date2int(key9[0]) < hoisted19 &&
                not(date2int(key9[0]) < hoisted21)) {
                vstart1 = buf[0 + idx7 * 3 + 2 : 1] + 15 + 0;
                key2 = key9;
                consume(tuple[date, date],
                (key2[0], int2date(buf[vstart1 : 2])));
            } else {
                 
            }
            idx7 = idx7 + 1;
            kstart0 = 0 + idx7 * 3;
            key10 = (int2date(buf[kstart0 : 2]));
            key9 = key10;
        }
    } else {
         
    }
}
