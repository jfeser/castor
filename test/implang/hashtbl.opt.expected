// Locals:
// hoisted0 : int (persists=false)
// hoisted1 : int (persists=false)
// hoisted2 : int (persists=false)
// hoisted3 : int (persists=false)
// hoisted4 : int (persists=false)
// hoisted5 : int (persists=false)
// kstart3 : int (persists=false)
// key5 : tuple[int] (persists=false)
// i1 : int (persists=true)
// vstart4 : int (persists=false)
// cstart0 : int (persists=true)
// count2 : int (persists=true)
// hash6 : int (persists=false)
fun printer () : void {
    hoisted0 = buf[7 : 1];
    hoisted1 = hoisted0 - 1;
    hoisted2 = buf[7 : 1];
    hoisted3 = 8 + hoisted2;
    hoisted4 = buf[7 : 1];
    hoisted5 = 8 + hoisted4;
    cstart0 = 1;
    i1 = 0;
    count2 = 5;
    loop (i1 < count2) {
        hash6 = buf[cstart0 : 1] * 1;
        if (hash6 < 0 || hoisted1 < hash6) {
            
        } else {
             kstart3 = buf[8 + hash6 : 1] + hoisted3;
             key5 = (buf[kstart3 : 1]);
             vstart4 = buf[8 + hash6 : 1] + hoisted5 + 1;
             if (true && key5[0] == buf[cstart0 : 1]) {
                 print(tuple[int, int], (key5[0], buf[vstart4 : 1]));
             } else {
                  
             }
        }
        cstart0 = cstart0 + 1;
        i1 = i1 + 1;
    }
}
// Locals:
// hoisted6 : int (persists=false)
// hoisted7 : int (persists=false)
// hoisted8 : int (persists=false)
// hoisted9 : int (persists=false)
// hoisted10 : int (persists=false)
// hoisted11 : int (persists=false)
// kstart3 : int (persists=false)
// key5 : tuple[int] (persists=false)
// i1 : int (persists=true)
// vstart4 : int (persists=false)
// cstart0 : int (persists=true)
// count2 : int (persists=true)
// hash6 : int (persists=false)
fun consumer () : void {
    hoisted6 = buf[7 : 1];
    hoisted7 = hoisted6 - 1;
    hoisted8 = buf[7 : 1];
    hoisted9 = 8 + hoisted8;
    hoisted10 = buf[7 : 1];
    hoisted11 = 8 + hoisted10;
    cstart0 = 1;
    i1 = 0;
    count2 = 5;
    loop (i1 < count2) {
        hash6 = buf[cstart0 : 1] * 1;
        if (hash6 < 0 || hoisted7 < hash6) {
            
        } else {
             kstart3 = buf[8 + hash6 : 1] + hoisted9;
             key5 = (buf[kstart3 : 1]);
             vstart4 = buf[8 + hash6 : 1] + hoisted11 + 1;
             if (true && key5[0] == buf[cstart0 : 1]) {
                 consume(tuple[int, int], (key5[0], buf[vstart4 : 1]));
             } else {
                  
             }
        }
        cstart0 = cstart0 + 1;
        i1 = i1 + 1;
    }
}
