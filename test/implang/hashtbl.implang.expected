// Locals:
// kstart10 : int (persists=false)
// i8 : int (persists=true)
// cstart7 : int (persists=true)
// count9 : int (persists=true)
// key12 : tuple[int] (persists=false)
// vstart11 : int (persists=false)
// hash13 : int (persists=false)
fun printer () : void {
    cstart7 = 1;
    i8 = 0;
    count9 = 5;
    loop (i8 < count9) {
        hash13 = buf[cstart7 : 1] * 1;
        if (hash13 < 0 || buf[7 : 1] - 1 < hash13) {
            
        } else {
             kstart10 = buf[8 + hash13 : 1] + 8 + buf[7 : 1];
             key12 = (buf[kstart10 : 1]);
             vstart11 = buf[8 + hash13 : 1] + 8 + buf[7 : 1] + 1;
             if (true && key12[0] == buf[cstart7 : 1]) {
                 print(tuple[int, int], (key12[0], buf[vstart11 : 1]));
             } else {
                  
             }
        }
        cstart7 = cstart7 + 1;
        i8 = i8 + 1;
    }
}
// Locals:
// kstart3 : int (persists=false)
// key5 : tuple[int] (persists=false)
// i1 : int (persists=true)
// vstart4 : int (persists=false)
// cstart0 : int (persists=true)
// count2 : int (persists=true)
// hash6 : int (persists=false)
fun consumer () : void {
    cstart0 = 1;
    i1 = 0;
    count2 = 5;
    loop (i1 < count2) {
        hash6 = buf[cstart0 : 1] * 1;
        if (hash6 < 0 || buf[7 : 1] - 1 < hash6) {
            
        } else {
             kstart3 = buf[8 + hash6 : 1] + 8 + buf[7 : 1];
             key5 = (buf[kstart3 : 1]);
             vstart4 = buf[8 + hash6 : 1] + 8 + buf[7 : 1] + 1;
             if (true && key5[0] == buf[cstart0 : 1]) {
                 consume(tuple[int, int], (key5[0], buf[vstart4 : 1]));
             } else {
                  
             }
        }
        cstart0 = cstart0 + 1;
        i1 = i1 + 1;
    }
}
