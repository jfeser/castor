// Locals:
// hoisted0 : int (persists=false)
// hoisted1 : tuple[int] (persists=false)
// found_tup1 : bool (persists=false)
// count2 : int (persists=false)
// tup0 : tuple[int] (persists=false)
fun printer () : void {
    hoisted0 = buf[0 : 1];
    hoisted1 = (hoisted0);
    found_tup1 = false;
    count2 = 0;
    tup0 = hoisted1;
    count2 = count2 + 1;
    found_tup1 = true;
    if (found_tup1) {
        if (not(count2 < 0 || count2 == 0)) {
            print(tuple[int], (count2));
        } else {
             
        }
    } else {
         
    }
}
// Locals:
// hoisted2 : int (persists=false)
// hoisted3 : tuple[int] (persists=false)
// found_tup1 : bool (persists=false)
// count2 : int (persists=false)
// tup0 : tuple[int] (persists=false)
fun consumer () : void {
    hoisted2 = buf[0 : 1];
    hoisted3 = (hoisted2);
    found_tup1 = false;
    count2 = 0;
    tup0 = hoisted3;
    count2 = count2 + 1;
    found_tup1 = true;
    if (found_tup1) {
        if (not(count2 < 0 || count2 == 0)) {
            consume(tuple[int], (count2));
        } else {
             
        }
    } else {
         
    }
}
