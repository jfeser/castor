// Locals:
// i1 : int (persists=true)
// cstart7 : int (persists=true)
// count9 : int (persists=true)
// min6 : int (persists=false)
// first3 : int (persists=true)
// count2 : int (persists=true)
// i8 : int (persists=true)
// tup4 : tuple[int] (persists=false)
// found_tup5 : bool (persists=false)
// cstart0 : int (persists=true)
fun printer () : void {
    cstart0 = 0;
    i1 = 0;
    count2 = 5;
    loop (i1 < count2) {
        first3 = 0;
        found_tup5 = false;
        min6 = 4611686018427387903;
        cstart7 = 5;
        i8 = 0;
        count9 = 5;
        loop (i8 < count9) {
            tup4 = (buf[cstart7 : 1]);
            min6 = tup4[0] < min6 ? tup4[0] : min6;
            found_tup5 = true;
            cstart7 = cstart7 + 1;
            i8 = i8 + 1;
        }
        if (found_tup5) {
            first3 = min6;
        } else {
             
        }
        if (first3 == buf[cstart0 : 1]) {
            print(tuple[int], (buf[cstart0 : 1]));
        } else {
             
        }
        cstart0 = cstart0 + 1;
        i1 = i1 + 1;
    }
}
// Locals:
// i1 : int (persists=true)
// cstart7 : int (persists=true)
// count9 : int (persists=true)
// min6 : int (persists=false)
// first3 : int (persists=true)
// count2 : int (persists=true)
// i8 : int (persists=true)
// tup4 : tuple[int] (persists=false)
// found_tup5 : bool (persists=false)
// cstart0 : int (persists=true)
fun consumer () : void {
    cstart0 = 0;
    i1 = 0;
    count2 = 5;
    loop (i1 < count2) {
        first3 = 0;
        found_tup5 = false;
        min6 = 4611686018427387903;
        cstart7 = 5;
        i8 = 0;
        count9 = 5;
        loop (i8 < count9) {
            tup4 = (buf[cstart7 : 1]);
            min6 = tup4[0] < min6 ? tup4[0] : min6;
            found_tup5 = true;
            cstart7 = cstart7 + 1;
            i8 = i8 + 1;
        }
        if (found_tup5) {
            first3 = min6;
        } else {
             
        }
        if (first3 == buf[cstart0 : 1]) {
            consume(tuple[int], (buf[cstart0 : 1]));
        } else {
             
        }
        cstart0 = cstart0 + 1;
        i1 = i1 + 1;
    }
}
