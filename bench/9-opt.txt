alist(orderby([nation, o_year desc],
        dedup(
          select([n_name as nation, to_year(o_orderdate) as o_year],
            join(((s_suppkey = l_suppkey) && true),
              join(((ps_suppkey = l_suppkey) && (ps_partkey = l_partkey)),
                join((p_partkey = l_partkey),
                  part,
                  join((o_orderkey = l_orderkey), orders, lineitem)),
                partsupp),
              join((s_nationkey = n_nationkey), supplier, nation))))) as k0,
  select([n_name as nation, to_year(o_orderdate) as o_year,
          sum(agg0) as sum_profit],
    alist(select([p_name, o_orderdate, l_quantity, l_extendedprice,
                  l_discount, ps_supplycost, n_name],
            join((((n_name = k0.nation) &&
                  (to_year(o_orderdate) = k0.o_year)) &&
                 (s_suppkey = l_suppkey)),
              join(((ps_suppkey = l_suppkey) && (ps_partkey = l_partkey)),
                join((p_partkey = l_partkey),
                  part,
                  join((o_orderkey = l_orderkey), orders, lineitem)),
                partsupp),
              join((s_nationkey = n_nationkey), supplier, nation))) as s9,
      filter((count0 > 0),
        select([count() as count0,
                sum(((l_extendedprice * (1 - l_discount)) -
                    (ps_supplycost * l_quantity))) as agg0, o_orderdate,
                n_name],
          filter((strpos(p_name, param1) > 0),
            atuple([ascalar(s9.p_name), ascalar(s9.o_orderdate),
                    ascalar(s9.l_quantity), ascalar(s9.l_extendedprice),
                    ascalar(s9.l_discount), ascalar(s9.ps_supplycost),
                    ascalar(s9.n_name)],
              cross)))))))