Checking call legality...
Checking call q0(param0, param1)...
Checking call q1(param0, param1)...
Checking call q3(param0, param1, x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)...
Checking call q2(param0, param1)...
Checking call q4(param0, param1, (t).1, (t).0, (t).2, (t).6, (t).11, (t).9, (t).5, (t).4, (t).3, (t).10, (t).8, (t).7)...
Checking call q5(param0, param1)...
Checking invariant preservation...
Done!
Adding query q6...
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:00:00.085681 [size=242]
----------------------------------------
  _var332 : Bag<(Int, Int, Int, Int, Int, Float, Float, Float, String, String, Int, Int, Int, String, String, String)> = lineitem
  _var333 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  return let q = Map {t -> t} (Filter {t -> (i2f((t).2) < let q = Map {_var44 -> _var44} (Filter {_var43 -> ((_var43).1 == (t).3)} (_var332)) in fmul(0.2, fdiv((sum Map {_var41 -> i2f((_var41).4)} (q)), i2f((sum Map {_var42 -> 1} (q))))))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var333)))))} (Map {t -> t} (Map {t -> ((t).1, (t).5, (t).4)} (_var332))))) in fdiv((sum Map {t -> (t).1} (q)), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:00:07.333359 [size=244]
----------------------------------------
  _var2985 : Bag<(Int, Int, Int, Int, Int, Float, Float, Float, String, String, Int, Int, Int, String, String, String)> = lineitem
  _var2986 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  return fdiv((sum Map {t -> (t).1} (Map {t -> t} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv((sum Map {_var41 -> i2f((_var41).4)} (Map {_var44 -> _var44} (Filter {_var43 -> ((_var43).1 == (t).3)} (_var2985)))), i2f((sum Map {_var42 -> 1} (Map {_var44 -> _var44} (Filter {_var43 -> ((_var43).1 == (t).3)} (_var2985))))))))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var2986)))))} (Map {t -> ((t).1, (t).5, (t).4)} (_var2985)))))), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:00:12.103775 [size=246]
----------------------------------------
  _var4629 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
  _var4630 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  _var4631 : Bag<(Int, Int, Int, Int, Int, Float, Float, Float, String, String, Int, Int, Int, String, String, String)> = lineitem
  return fdiv((sum Map {t -> (t).1} (Map {t -> t} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv((sum Map {_var41 -> i2f((_var41).4)} (Map {_var44 -> _var44} (Filter {_var43 -> ((_var43).1 == (t).3)} (_var4631)))), i2f((sum Map {_var42 -> 1} (Map {_var44 -> _var44} (Filter {_var43 -> ((_var43).1 == (t).3)} (_var4631))))))))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var4630)))))} (_var4629))))), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:00:18.623122 [size=240]
----------------------------------------
  _var6960 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
  _var6961 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  _var6962 : Bag<(Int, Int, Int, Int, Int, Float, Float, Float, String, String, Int, Int, Int, String, String, String)> = lineitem
  return fdiv((sum Map {t -> (t).1} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv((sum Map {_var41 -> i2f((_var41).4)} (Map {_var44 -> _var44} (Filter {_var43 -> ((_var43).1 == (t).3)} (_var6962)))), i2f((sum Map {_var42 -> 1} (Map {_var44 -> _var44} (Filter {_var43 -> ((_var43).1 == (t).3)} (_var6962))))))))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var6961)))))} (_var6960)))), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:00:28.592477 [size=228]
----------------------------------------
  _var11820 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
  _var11821 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  _var11822 : Bag<(Int, Int, Int, Int, Int, Float, Float, Float, String, String, Int, Int, Int, String, String, String)> = lineitem
  return fdiv((sum Map {t -> (t).1} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv((sum Map {_var41 -> i2f((_var41).4)} (Filter {_var43 -> ((_var43).1 == (t).3)} (_var11822))), i2f((sum Map {_var42 -> 1} (Filter {_var43 -> ((_var43).1 == (t).3)} (_var11822)))))))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var11821)))))} (_var11820)))), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:00:33.260094 [size=236]
----------------------------------------
  _var14298 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
  _var14299 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  _var14300 : Map<Int, Bag<(Int, Int, Int, Int, Int, Float, Float, Float, String, String, Int, Int, Int, String, String, String)>> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem))
  return fdiv((sum Map {t -> (t).1} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv((sum Map {_var41 -> i2f((_var41).4)} (_var14300[(t).3])), i2f((sum Map {_var42 -> 1} (_var14300[(t).3]))))))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var14299)))))} (_var14298)))), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:00:40.711385 [size=264]
----------------------------------------
  _var18353 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
  _var18354 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  _var18355 : Map<Int, Bag<(Int, Int, Int, Int, Int, Float, Float, Float, String, String, Int, Int, Int, String, String, String)>> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem))
  _var18356 : Map<Int, Bag<Int>> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> Map {_var42 -> 1} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem)))
  return fdiv((sum Map {t -> (t).1} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv((sum Map {_var41 -> i2f((_var41).4)} (_var18355[(t).3])), i2f((sum _var18356[(t).3])))))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var18354)))))} (_var18353)))), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:00:49.228802 [size=264]
----------------------------------------
  _var22433 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
  _var22434 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  _var22435 : Map<Int, Bag<(Int, Int, Int, Int, Int, Float, Float, Float, String, String, Int, Int, Int, String, String, String)>> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem))
  _var22436 : Map<Int, Int> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> (sum Map {_var42 -> 1} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem))))
  return fdiv((sum Map {t -> (t).1} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv((sum Map {_var41 -> i2f((_var41).4)} (_var22435[(t).3])), i2f(_var22436[(t).3]))))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var22434)))))} (_var22433)))), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:00:56.798287 [size=264]
----------------------------------------
  _var26523 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
  _var26524 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  _var26525 : Map<Int, Bag<Float>> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> Map {_var41 -> i2f((_var41).4)} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem)))
  _var26526 : Map<Int, Int> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> (sum Map {_var42 -> 1} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem))))
  return fdiv((sum Map {t -> (t).1} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv((sum _var26525[(t).3]), i2f(_var26526[(t).3]))))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var26524)))))} (_var26523)))), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:01:29.866449 [size=264]
----------------------------------------
  _var32060 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
  _var32061 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  _var32062 : Map<Int, Bag<Float>> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> Map {_var41 -> i2f((_var41).4)} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem)))
  _var32063 : Map<Int, Float> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> i2f((sum Map {_var42 -> 1} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem)))))
  return fdiv((sum Map {t -> (t).1} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv((sum _var32062[(t).3]), _var32063[(t).3])))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var32061)))))} (_var32060)))), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:01:37.676811 [size=264]
----------------------------------------
  _var36195 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
  _var36196 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  _var36197 : Map<Int, Float> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> (sum Map {_var41 -> i2f((_var41).4)} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem))))
  _var36198 : Map<Int, Float> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> i2f((sum Map {_var42 -> 1} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem)))))
  return fdiv((sum Map {t -> (t).1} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv(_var36197[(t).3], _var36198[(t).3])))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var36196)))))} (_var36195)))), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:02:02.645644 [size=252]
----------------------------------------
  _var49453 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
  _var49454 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  _var49455 : Map<Int, Float> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> (sum Map {_var41 -> i2f((_var41).4)} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem))))
  _var49456 : Map<Int, Float> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> i2f((sum Map {_var42 -> 1} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem)))))
  return fdiv((sum Map {t -> (t).1} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv(_var49455[(t).3], _var49456[(t).3])))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Filter {t -> (streq((t).3, param0) and streq((t).6, param1))} (_var49454)))} (_var49453)))), 7.0)
----------------------------------------
updating with 1 new solutions
update order:
  --> q6
considering update 1/1...
SOLUTION FOR q6 AT 0:02:15.944768 [size=254]
----------------------------------------
  _var59379 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
  _var59380 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  _var59381 : Map<Int, Float> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> (sum Map {_var41 -> i2f((_var41).4)} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem))))
  _var59382 : Map<Int, Float> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> i2f((sum Map {_var42 -> 1} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem)))))
  return fdiv((sum Map {t -> (t).1} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv(_var59381[(t).3], _var59382[(t).3])))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Filter {t -> streq((t).6, param1)} (Filter {t -> streq((t).3, param0)} (_var59380))))} (_var59379)))), 7.0)
----------------------------------------
Stopping jobs
requesting stop for ImproveQueryJob[q6]
Stopping SafeQueue...
Done!
Generating IR...
Inlining calls...
Generating code for extension types...
Concretization functions:

_var197 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
_var4629 : Bag<(Int, Float, Int)> = Map {t -> ((t).1, (t).5, (t).4)} (lineitem)
_var32063 : Map<Int, Float> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> i2f((sum Map {_var42 -> 1} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem)))))
_var36197 : Map<Int, Float> = EMakeMap2(Map {_var43 -> (_var43).1} (lineitem), _var13930 -> (sum Map {_var41 -> i2f((_var41).4)} (Filter {_var43 -> ((_var43).1 == _var13930)} (lineitem))))

query17:
  state _var197 : Bag<(Int, String, String, String, String, Int, String, Float, String)>
  state _var4629 : Bag<(Int, Float, Int)>
  state _var32063 : Map<Int, Float>
  state _var36197 : Map<Int, Float>

  query q6(param0 : String, param1 : String):
    fdiv((sum Map {t -> (t).1} (Filter {t -> (i2f((t).2) < fmul(0.2, fdiv(_var36197[(t).3], _var32063[(t).3])))} (FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((t2).0 == (t1).0)} (Filter {t -> streq((t).6, param1)} (Filter {t -> streq((t).3, param0)} (_var197))))} (_var4629)))), 7.0)

Setting up auxiliary types...
Setting up member variables...
Generating constructors...
Generating method q6...
Number of improvements done: 16
