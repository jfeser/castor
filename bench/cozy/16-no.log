Checking call legality...
Checking call q1(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, (t).2, (t).4, (t).0, (t).1, (t).3)...
Checking call q0(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10)...
Checking call q2(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10)...
Checking call q3(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10)...
Checking call q4(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10)...
Checking call q7(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, x5, x6, x7, (t).2, (t).4, (t).0, (t).1, (t).3)...
Checking call q6(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, x5, x6, x7)...
Checking call q8(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, x5, x6, x7)...
Checking call q9(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, x5, x6, x7)...
Checking call q10(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, x5, x6, x7)...
Checking call q11(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, x5, x6, x7)...
Checking call q5(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10)...
Checking call q12(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, (k).0, (k).1, (k).2)...
Checking call q13(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10)...
Checking invariant preservation...
failed to convert "Customer"
  ---> EStr('Customer').with_type(TString())
  ---> src:  ?
  ---> type: ?
failed to convert strpos(_tmp151, "Customer")
  ---> ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt())
  ---> src:  ?
  ---> type: ?
failed to convert (strpos(_tmp151, "Customer") >= 1)
  ---> EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())
  ---> src:  ?
  ---> type: ?
failed to convert ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1))
  ---> EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())
  ---> src:  ?
  ---> type: ?
failed to convert (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))
  ---> EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())
  ---> src:  ?
  ---> type: ?
failed to convert let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))
  ---> ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool())
  ---> src:  ?
  ---> type: ?
failed to convert Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier)
  ---> EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))
  ---> src:  ?
  ---> type: ?
failed to convert Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))
  ---> EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))
  ---> src:  ?
  ---> type: ?
failed to convert (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier)))
  ---> EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())
  ---> src:  ?
  ---> type: ?
failed to convert (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))
  ---> EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool())
  ---> src:  ?
  ---> type: ?
failed to convert Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)
  ---> EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))
  ---> src:  ?
  ---> type: ?
failed to convert Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp))
  ---> EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))
  ---> src:  ?
  ---> type: ?
failed to convert Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))
  ---> EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))
  ---> src:  ?
  ---> type: ?
failed to convert Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp))))
  ---> EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))
  ---> src:  ?
  ---> type: ?
failed to convert Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))
  ---> EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))
  ---> src:  ?
  ---> type: ?
failed to convert let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))
  ---> ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))
  ---> src:  ?
  ---> type: ?
failed to convert Map {t1 -> let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp127 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp127 == param3) or ((_tmp127 == param4) or ((_tmp127 == param5) or ((_tmp127 == param6) or ((_tmp127 == param7) or ((_tmp127 == param8) or ((_tmp127 == param9) or (_tmp127 == param10))))))))))} (part))))
  ---> EMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp127').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))
  ---> src:  ?
  ---> type: ?
failed to convert FlatMap {t1 -> let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp127 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp127 == param3) or ((_tmp127 == param4) or ((_tmp127 == param5) or ((_tmp127 == param6) or ((_tmp127 == param7) or ((_tmp127 == param8) or ((_tmp127 == param9) or (_tmp127 == param10))))))))))} (part))))
  ---> EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp127').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))
  ---> src:  ?
  ---> type: ?
failed to convert Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp127 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp127 == param3) or ((_tmp127 == param4) or ((_tmp127 == param5) or ((_tmp127 == param6) or ((_tmp127 == param7) or ((_tmp127 == param8) or ((_tmp127 == param9) or (_tmp127 == param10))))))))))} (part)))))
  ---> EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp127').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))
  ---> src:  ?
  ---> type: ?
failed to convert (distinct Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp127 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp127 == param3) or ((_tmp127 == param4) or ((_tmp127 == param5) or ((_tmp127 == param6) or ((_tmp127 == param7) or ((_tmp127 == param8) or ((_tmp127 == param9) or (_tmp127 == param10))))))))))} (part))))))
  ---> EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp127').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))
  ---> src:  ?
  ---> type: ?
failed to convert Map {t -> ((t).1, (t).0, (t).2)} ((distinct Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp127 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp127 == param3) or ((_tmp127 == param4) or ((_tmp127 == param5) or ((_tmp127 == param6) or ((_tmp127 == param7) or ((_tmp127 == param8) or ((_tmp127 == param9) or (_tmp127 == param10))))))))))} (part)))))))
  ---> EMap(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp127').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt()))))
  ---> src:  ?
  ---> type: ?
failed to convert (distinct Map {t -> ((t).1, (t).0, (t).2)} ((distinct Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp127 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp127 == param3) or ((_tmp127 == param4) or ((_tmp127 == param5) or ((_tmp127 == param6) or ((_tmp127 == param7) or ((_tmp127 == param8) or ((_tmp127 == param9) or (_tmp127 == param10))))))))))} (part))))))))
  ---> EUnaryOp('distinct', EMap(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp127').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt()))))
  ---> src:  ?
  ---> type: ?
failed to convert Map {_var104 -> (_var104 === k)} ((distinct Map {t -> ((t).1, (t).0, (t).2)} ((distinct Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp127 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp127 == param3) or ((_tmp127 == param4) or ((_tmp127 == param5) or ((_tmp127 == param6) or ((_tmp127 == param7) or ((_tmp127 == param8) or ((_tmp127 == param9) or (_tmp127 == param10))))))))))} (part)))))))))
  ---> EMap(EUnaryOp('distinct', EMap(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp127').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt())))), ELambda(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), EBinOp(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), '===', EVar('k').with_type(TTuple((TString(), TString(), TInt())))).with_type(TBool()))).with_type(TBag(TBool()))
  ---> src:  ?
  ---> type: ?
failed to convert (any Map {_var104 -> (_var104 === k)} ((distinct Map {t -> ((t).1, (t).0, (t).2)} ((distinct Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp127 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp127 == param3) or ((_tmp127 == param4) or ((_tmp127 == param5) or ((_tmp127 == param6) or ((_tmp127 == param7) or ((_tmp127 == param8) or ((_tmp127 == param9) or (_tmp127 == param10))))))))))} (part))))))))))
  ---> EUnaryOp('any', EMap(EUnaryOp('distinct', EMap(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp127').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt())))), ELambda(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), EBinOp(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), '===', EVar('k').with_type(TTuple((TString(), TString(), TInt())))).with_type(TBool()))).with_type(TBag(TBool()))).with_type(TBool())
  ---> src:  ?
  ---> type: ?
failed to convert ((any Map {_var104 -> (_var104 === k)} ((distinct Map {t -> ((t).1, (t).0, (t).2)} ((distinct Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp127 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp127 == param3) or ((_tmp127 == param4) or ((_tmp127 == param5) or ((_tmp127 == param6) or ((_tmp127 == param7) or ((_tmp127 == param8) or ((_tmp127 == param9) or (_tmp127 == param10))))))))))} (part)))))))))) and ((q === Map {t -> t} (Filter {t -> (streq((t).1, (k).0) and (streq((t).0, (k).1) and ((t).2 == (k).2)))} ((distinct Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp246 = (t1).0 in Map {t2 -> (_tmp246, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp246 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var90 -> _var90} (Filter {_var89 -> let _tmp232 = (_var89).6 in (((t).1 == (_var89).0) and ((strpos(_tmp232, "Customer") >= 1) and (strpos(_tmp232, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp208 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp208 == param3) or ((_tmp208 == param4) or ((_tmp208 == param5) or ((_tmp208 == param6) or ((_tmp208 == param7) or ((_tmp208 == param8) or ((_tmp208 == param9) or (_tmp208 == param10))))))))))} (part))))))))) and ((len q) == 1)))
  ---> EBinOp(EUnaryOp('any', EMap(EUnaryOp('distinct', EMap(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp127').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt())))), ELambda(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), EBinOp(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), '===', EVar('k').with_type(TTuple((TString(), TString(), TInt())))).with_type(TBool()))).with_type(TBag(TBool()))).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), '===', EMap(EFilter(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp208').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp246').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp232').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp232').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp232').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var90').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var90').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp246').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp246').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), EBinOp(ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 0).with_type(TString()))).with_type(TBool()), 'and', EBinOp(ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 1).with_type(TString()))).with_type(TBool()), 'and', EBinOp(ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()), '==', ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 2).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBool()), 'and', EBinOp(EUnaryOp('len', EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())
  ---> src:  ?
  ---> type: ?
failed to convert (((any Map {_var104 -> (_var104 === k)} ((distinct Map {t -> ((t).1, (t).0, (t).2)} ((distinct Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp127 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp127 == param3) or ((_tmp127 == param4) or ((_tmp127 == param5) or ((_tmp127 == param6) or ((_tmp127 == param7) or ((_tmp127 == param8) or ((_tmp127 == param9) or (_tmp127 == param10))))))))))} (part)))))))))) and ((q === Map {t -> t} (Filter {t -> (streq((t).1, (k).0) and (streq((t).0, (k).1) and ((t).2 == (k).2)))} ((distinct Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp246 = (t1).0 in Map {t2 -> (_tmp246, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp246 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var90 -> _var90} (Filter {_var89 -> let _tmp232 = (_var89).6 in (((t).1 == (_var89).0) and ((strpos(_tmp232, "Customer") >= 1) and (strpos(_tmp232, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp208 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp208 == param3) or ((_tmp208 == param4) or ((_tmp208 == param5) or ((_tmp208 == param6) or ((_tmp208 == param7) or ((_tmp208 == param8) or ((_tmp208 == param9) or (_tmp208 == param10))))))))))} (part))))))))) and ((len q) == 1))) => (((sum Map {_name119 -> 1} (q)) <= 1) or (empty q)))
  ---> EBinOp(EBinOp(EUnaryOp('any', EMap(EUnaryOp('distinct', EMap(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp127').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt())))), ELambda(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), EBinOp(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), '===', EVar('k').with_type(TTuple((TString(), TString(), TInt())))).with_type(TBool()))).with_type(TBag(TBool()))).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), '===', EMap(EFilter(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp208').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp246').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp232').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp232').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp232').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var90').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var90').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp246').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp246').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), EBinOp(ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 0).with_type(TString()))).with_type(TBool()), 'and', EBinOp(ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 1).with_type(TString()))).with_type(TBool()), 'and', EBinOp(ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()), '==', ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 2).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBool()), 'and', EBinOp(EUnaryOp('len', EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()), '=>', EBinOp(EBinOp(EUnaryOp('sum', EMap(EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('_name119').with_type(TTuple((TString(), TString(), TInt(), TInt()))), ENum(1).with_type(TInt()))).with_type(TBag(TInt()))).with_type(TInt()), '<=', ENum(1).with_type(TInt())).with_type(TBool()), 'or', EUnaryOp('empty', EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBool())).with_type(TBool())).with_type(TBool())
  ---> src:  ?
  ---> type: ?
failed to convert (not (((any Map {_var104 -> (_var104 === k)} ((distinct Map {t -> ((t).1, (t).0, (t).2)} ((distinct Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp165 = (t1).0 in Map {t2 -> (_tmp165, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp165 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var88 -> _var88} (Filter {_var87 -> let _tmp151 = (_var87).6 in (((t).1 == (_var87).0) and ((strpos(_tmp151, "Customer") >= 1) and (strpos(_tmp151, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp127 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp127 == param3) or ((_tmp127 == param4) or ((_tmp127 == param5) or ((_tmp127 == param6) or ((_tmp127 == param7) or ((_tmp127 == param8) or ((_tmp127 == param9) or (_tmp127 == param10))))))))))} (part)))))))))) and ((q === Map {t -> t} (Filter {t -> (streq((t).1, (k).0) and (streq((t).0, (k).1) and ((t).2 == (k).2)))} ((distinct Map {t -> ((t).4, (t).3, (t).5, (t).10)} (FlatMap {t1 -> let _tmp246 = (t1).0 in Map {t2 -> (_tmp246, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4)} (Filter {t2 -> (_tmp246 == (t2).0)} (Map {t -> t} (Map {t -> t} (Filter {t -> (not (exists Map {_var90 -> _var90} (Filter {_var89 -> let _tmp232 = (_var89).6 in (((t).1 == (_var89).0) and ((strpos(_tmp232, "Customer") >= 1) and (strpos(_tmp232, "Complaints") >= 1)))} (supplier))))} (partsupp)))))} (Map {t -> t} (Map {t -> t} (Filter {t -> let _tmp208 = (t).5 in ((not streq((t).3, param1)) and ((not (strpos((t).4, param2) == 1)) and ((_tmp208 == param3) or ((_tmp208 == param4) or ((_tmp208 == param5) or ((_tmp208 == param6) or ((_tmp208 == param7) or ((_tmp208 == param8) or ((_tmp208 == param9) or (_tmp208 == param10))))))))))} (part))))))))) and ((len q) == 1))) => (((sum Map {_name119 -> 1} (q)) <= 1) or (empty q))))
  ---> EUnaryOp('not', EBinOp(EBinOp(EUnaryOp('any', EMap(EUnaryOp('distinct', EMap(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp127').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp127').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp165').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp151').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp151').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp165').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp165').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt())))), ELambda(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), EBinOp(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), '===', EVar('k').with_type(TTuple((TString(), TString(), TInt())))).with_type(TBool()))).with_type(TBag(TBool()))).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), '===', EMap(EFilter(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ELambda(EVar('_tmp208').with_type(TInt()), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EVar('_tmp208').with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ELambda(EVar('_tmp246').with_type(TInt()), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), ELet(ETupleGet(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ELambda(EVar('_tmp232').with_type(TString()), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (EVar('_tmp232').with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (EVar('_tmp232').with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var90').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var90').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(EVar('_tmp246').with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((EVar('_tmp246').with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), EBinOp(ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 0).with_type(TString()))).with_type(TBool()), 'and', EBinOp(ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 1).with_type(TString()))).with_type(TBool()), 'and', EBinOp(ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()), '==', ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 2).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBool()), 'and', EBinOp(EUnaryOp('len', EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()), '=>', EBinOp(EBinOp(EUnaryOp('sum', EMap(EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('_name119').with_type(TTuple((TString(), TString(), TInt(), TInt()))), ENum(1).with_type(TInt()))).with_type(TBag(TInt()))).with_type(TInt()), '<=', ENum(1).with_type(TInt())).with_type(TBool()), 'or', EUnaryOp('empty', EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())
  ---> src:  ?
  ---> type: ?
conversion failed for: EUnaryOp('not', EBinOp(EBinOp(EUnaryOp('any', EMap(EUnaryOp('distinct', EMap(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (ETupleGet(EVar('_var87').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var88').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt())))), ELambda(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), EBinOp(EVar('_var104').with_type(TTuple((TString(), TString(), TInt()))), '===', EVar('k').with_type(TTuple((TString(), TString(), TInt())))).with_type(TBool()))).with_type(TBag(TBool()))).with_type(TBool()), 'and', EBinOp(EBinOp(EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), '===', EMap(EFilter(EUnaryOp('distinct', EMap(EFlatMap(EMap(EMap(EFilter(EVar('part').with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EBinOp(EUnaryOp('not', ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), EVar('param1').with_type(TString()))).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EUnaryOp('not', EBinOp(ECall('strpos', (ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), EVar('param2').with_type(TString()))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool()), 'and', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param3').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param4').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param5').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param6').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param7').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param8').with_type(TInt())).with_type(TBool()), 'or', EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param9').with_type(TInt())).with_type(TBool()), 'or', EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), '==', EVar('param10').with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EMap(EFilter(EMap(EMap(EFilter(EVar('partsupp').with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EUnaryOp('not', EUnaryOp('exists', EMap(EFilter(EVar('supplier').with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EBinOp(EBinOp(ETupleGet(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), '==', ETupleGet(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()), 'and', EBinOp(EBinOp(ECall('strpos', (ETupleGet(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), EStr('Customer').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool()), 'and', EBinOp(ECall('strpos', (ETupleGet(EVar('_var89').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), EStr('Complaints').with_type(TString()))).with_type(TInt()), '>=', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString())))), ELambda(EVar('_var90').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), EVar('_var90').with_type(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TInt(), TString(), TFloat(), TString()))))).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EVar('t').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), EBinOp(ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), '==', ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt())).with_type(TBool()))).with_type(TBag(TTuple((TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 1).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 2).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 6).with_type(TString()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 7).with_type(TFloat()), ETupleGet(EVar('t1').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString()))), 8).with_type(TString()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 0).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 1).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 2).with_type(TInt()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TFloat()), ETupleGet(EVar('t2').with_type(TTuple((TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()))).with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))))).with_type(TBag(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString())))), ELambda(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), ETuple((ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 4).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 3).with_type(TString()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 5).with_type(TInt()), ETupleGet(EVar('t').with_type(TTuple((TInt(), TString(), TString(), TString(), TString(), TInt(), TString(), TFloat(), TString(), TInt(), TInt(), TInt(), TFloat(), TString()))), 10).with_type(TInt()))).with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), EBinOp(ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 1).with_type(TString()), ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 0).with_type(TString()))).with_type(TBool()), 'and', EBinOp(ECall('streq', (ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 0).with_type(TString()), ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 1).with_type(TString()))).with_type(TBool()), 'and', EBinOp(ETupleGet(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), 2).with_type(TInt()), '==', ETupleGet(EVar('k').with_type(TTuple((TString(), TString(), TInt()))), 2).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))), EVar('t').with_type(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBool()), 'and', EBinOp(EUnaryOp('len', EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TInt()), '==', ENum(1).with_type(TInt())).with_type(TBool())).with_type(TBool())).with_type(TBool()), '=>', EBinOp(EBinOp(EUnaryOp('sum', EMap(EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt())))), ELambda(EVar('_name119').with_type(TTuple((TString(), TString(), TInt(), TInt()))), ENum(1).with_type(TInt()))).with_type(TBag(TInt()))).with_type(TInt()), '<=', ENum(1).with_type(TInt())).with_type(TBool()), 'or', EUnaryOp('empty', EVar('q').with_type(TBag(TTuple((TString(), TString(), TInt(), TInt()))))).with_type(TBool())).with_type(TBool())).with_type(TBool())).with_type(TBool())
