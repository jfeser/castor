Checking call legality...
Checking call q0(param0, param1, param2, param3, param4, param5)...
Checking invariant preservation...
Done!
Adding query q1...
updating with 1 new solutions
update order:
  --> q1
considering update 1/1...
SOLUTION FOR q1 AT 0:00:00.100942 [size=621]
----------------------------------------
  _var291 : Bag<(Int, Int, Int, Int, Int, Float, Float, Float, String, String, Int, Int, Int, String, String, String)> = lineitem
  _var292 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part
  return let q = FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t1).9, (t1).10, (t1).11, (t1).12, (t1).13, (t1).14, (t1).15, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((((t2).0 == (t1).1) and (streq((t2).3, param0) and ((streq((t2).6, "SM CASE") or (streq((t2).6, "SM BOX") or (streq((t2).6, "SM PACK") or streq((t2).6, "SM PKG")))) and ((i2f((t1).4) >= param3) and ((i2f((t1).4) <= (param3 + i2f(10))) and (((t2).5 >= 1) and (((t2).5 <= 5) and ((streq((t1).14, "AIR") or streq((t1).14, "AIR REG")) and streq((t1).13, "DELIVER IN PERSON"))))))))) or ((((t2).0 == (t1).1) and (streq((t2).3, param1) and ((streq((t2).6, "MED BAG") or (streq((t2).6, "MED BOX") or (streq((t2).6, "MED PKG") or streq((t2).6, "MED PACK")))) and ((i2f((t1).4) >= param4) and ((i2f((t1).4) <= (param4 + i2f(10))) and (((t2).5 >= 1) and (((t2).5 <= 10) and ((streq((t1).14, "AIR") or streq((t1).14, "AIR REG")) and streq((t1).13, "DELIVER IN PERSON"))))))))) or (((t2).0 == (t1).1) and (streq((t2).3, param2) and ((streq((t2).6, "LG CASE") or (streq((t2).6, "LG BOX") or (streq((t2).6, "LG PACK") or streq((t2).6, "LG PKG")))) and ((i2f((t1).4) >= param5) and ((i2f((t1).4) <= (param5 + i2f(10))) and (((t2).5 >= 1) and (((t2).5 <= 15) and ((streq((t1).14, "AIR") or streq((t1).14, "AIR REG")) and streq((t1).13, "DELIVER IN PERSON")))))))))))} (Map {t -> t} (_var292)))} (Map {t -> t} (_var291)) in (sum Map {t -> fmul((t).5, (i2f(1) - (t).6))} (q))
----------------------------------------
Stopping jobs
requesting stop for ImproveQueryJob[q1]
Stopping SafeQueue...
Done!
Generating IR...
Inlining calls...
Generating code for extension types...
Concretization functions:

_var155 : Bag<(Int, Int, Int, Int, Int, Float, Float, Float, String, String, Int, Int, Int, String, String, String)> = lineitem
_var156 : Bag<(Int, String, String, String, String, Int, String, Float, String)> = part

query19:
  state _var155 : Bag<(Int, Int, Int, Int, Int, Float, Float, Float, String, String, Int, Int, Int, String, String, String)>
  state _var156 : Bag<(Int, String, String, String, String, Int, String, Float, String)>

  query q1(param0 : String, param1 : String, param2 : String, param3 : Float, param4 : Float, param5 : Float):
    let q = FlatMap {t1 -> Map {t2 -> ((t1).0, (t1).1, (t1).2, (t1).3, (t1).4, (t1).5, (t1).6, (t1).7, (t1).8, (t1).9, (t1).10, (t1).11, (t1).12, (t1).13, (t1).14, (t1).15, (t2).0, (t2).1, (t2).2, (t2).3, (t2).4, (t2).5, (t2).6, (t2).7, (t2).8)} (Filter {t2 -> ((((t2).0 == (t1).1) and (streq((t2).3, param0) and ((streq((t2).6, "SM CASE") or (streq((t2).6, "SM BOX") or (streq((t2).6, "SM PACK") or streq((t2).6, "SM PKG")))) and ((i2f((t1).4) >= param3) and ((i2f((t1).4) <= (param3 + i2f(10))) and (((t2).5 >= 1) and (((t2).5 <= 5) and ((streq((t1).14, "AIR") or streq((t1).14, "AIR REG")) and streq((t1).13, "DELIVER IN PERSON"))))))))) or ((((t2).0 == (t1).1) and (streq((t2).3, param1) and ((streq((t2).6, "MED BAG") or (streq((t2).6, "MED BOX") or (streq((t2).6, "MED PKG") or streq((t2).6, "MED PACK")))) and ((i2f((t1).4) >= param4) and ((i2f((t1).4) <= (param4 + i2f(10))) and (((t2).5 >= 1) and (((t2).5 <= 10) and ((streq((t1).14, "AIR") or streq((t1).14, "AIR REG")) and streq((t1).13, "DELIVER IN PERSON"))))))))) or (((t2).0 == (t1).1) and (streq((t2).3, param2) and ((streq((t2).6, "LG CASE") or (streq((t2).6, "LG BOX") or (streq((t2).6, "LG PACK") or streq((t2).6, "LG PKG")))) and ((i2f((t1).4) >= param5) and ((i2f((t1).4) <= (param5 + i2f(10))) and (((t2).5 >= 1) and (((t2).5 <= 15) and ((streq((t1).14, "AIR") or streq((t1).14, "AIR REG")) and streq((t1).13, "DELIVER IN PERSON")))))))))))} (Map {t -> t} (_var156)))} (Map {t -> t} (_var155)) in (sum Map {t -> fmul((t).5, (i2f(1) - (t).6))} (q))

Setting up auxiliary types...
Setting up member variables...
Generating constructors...
Generating method q1...
Number of improvements done: 1
