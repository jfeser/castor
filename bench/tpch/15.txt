# -- $ID$
# -- TPC-H/TPC-R Top Supplier Query (Q15)
# -- Functional Query Definition
# -- Approved February 1998
# :x
# create view revenue:s (supplier_no, total_revenue) as
# 	select
# 		l_suppkey,
# 		sum(l_extendedprice * (1 - l_discount))
# 	from
# 		lineitem
# 	where
# 		l_shipdate >= date ':1'
# 		and l_shipdate < date ':1' + interval '3' month
# 	group by
# 		l_suppkey;

# :o
# select
# 	s_suppkey,
# 	s_name,
# 	s_address,
# 	s_phone,
# 	total_revenue
# from
# 	supplier,
# 	revenue:s
# where
# 	s_suppkey = supplier_no
# 	and total_revenue = (
# 		select
# 			max(total_revenue)
# 		from
# 			revenue:s
# 	)
# order by
# 	s_suppkey;

# drop view revenue:s;
# :n -1

# groupby([l_suppkey as supplier_no, sum(l_extendedprice * (1 - l_discount)) as total_revenue], [l_suppkey], filter(l_shipdate >= param1 && l_shipdate < param1 + month(3), lineitem))

select([s_suppkey, s_name, s_address, s_phone, total_revenue],
  orderby([s_suppkey desc],
    select([s_suppkey, s_name, s_address, s_phone, total_revenue],
      join(((s_suppkey = supplier_no) &&
           (total_revenue =
           (select([max(total_revenue_i) as tot],
              groupby([sum((l_extendedprice * (1 - l_discount))) as total_revenue_i],
                [l_suppkey],
                filter(((l_shipdate >= param1) &&
                       (l_shipdate < (param1 + month(3)))),
                  lineitem)))))),
        supplier,
        groupby([l1_suppkey as supplier_no,
                 sum((l1_extendedprice * (1 - l1_discount))) as total_revenue],
          [l1_suppkey],
          filter(((l1_shipdate >= param1) &&
                 (l1_shipdate < (param1 + month(3)))),
            select([l_shipdate as l1_shipdate, l_suppkey as l1_suppkey, l_extendedprice as l1_extendedprice, l_discount as l1_discount], lineitem)))))))
